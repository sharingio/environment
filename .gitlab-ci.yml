stages:
  - build

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  PLATFORMS: linux/amd64,linux/arm64

# Kaniko
.registry-login: &registry-login |
  set -x
  cat << EOF > /kaniko/.docker/config.json
  {
    "auths":{
      "$CI_REGISTRY": {
        "username":"$CI_REGISTRY_USER",
        "password":"$CI_REGISTRY_PASSWORD"
      }
    }
  }
  EOF

.declare-extra-destinations: &declare-extra-destinations |
  if [[ ! "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]] && [[ -z "$CI_COMMIT_TAG" ]]; then
    export BRANCH_NAME="-$CI_COMMIT_BRANCH"
  fi

  export BASE_TAG=$(date --date="${CI_COMMIT_TIMESTAMP//[T+]/ }" '+%Y.%m.%d.%H%M')
  if [[ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]]; then
    export KANIKO_EXTRA_DESTINATION="--destination $CI_REGISTRY_IMAGE:latest$BRANCH_NAME"
  fi
  if [ -n "$CI_COMMIT_TAG" ]; then
    export BRANCH_NAME=""
    export IMAGE_TAG="$CI_REGISTRY_IMAGE/humacs:$CI_COMMIT_TAG"
    export KANIKO_EXTRA_DESTINATION="--destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
  fi

.build: &build |
  /kaniko/executor \
    --snapshotMode=redo \
    --cache=false \
    --context $CI_PROJECT_DIR \
    --dockerfile $CI_PROJECT_DIR/Dockerfile \
    --destination $CI_REGISTRY_IMAGE:$BASE_TAG$BRANCH_NAME \
    $KANIKO_EXTRA_ARGS \
    $KANIKO_EXTRA_DESTINATION

# Img
.container-build-pre-script: &container-build-pre-script |
  set -x
  mkdir -p $HOME/.docker/cli-plugins
  wget -O $HOME/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64
  chmod +x $HOME/.docker/cli-plugins/docker-buildx
  docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  docker buildx create --use --name builder
  docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.declare-extra-destinations-img: &declare-extra-destinations-img |
  if [[ ! "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]] && [[ -z "$CI_COMMIT_TAG" ]]; then
    export BRANCH_NAME="-$CI_COMMIT_BRANCH"
  fi

  export BASE_TAG=$(date --date="${CI_COMMIT_TIMESTAMP//[T+]/ }" '+%Y.%m.%d.%H%M')
  if [[ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]]; then
    export CONTAINER_EXTRA_DESTINATION="-t $CI_REGISTRY_IMAGE/${APP}:latest$BRANCH_NAME"
  fi
  if [ -n "$CI_COMMIT_TAG" ]; then
    export BRANCH_NAME=""
    export IMAGE_TAG="$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG/${APP}"
    export CONTAINER_EXTRA_DESTINATION="-t $CI_REGISTRY_IMAGE/${APP}:$CI_COMMIT_TAG"
  fi

.build-img: &build-img |
  docker buildx build \
    --push \
    -f $CI_PROJECT_DIR/${APP}.Dockerfile \
    $CONTAINER_EXTRA_DESTINATION \
    -t $CI_REGISTRY_IMAGE/${APP}:$BASE_TAG$BRANCH_NAME \
    --platform $PLATFORMS \
    $CI_PROJECT_DIR

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug-v1.3.0
    entrypoint: [""]
  retry: 2
  before_script:
    - *registry-login
    - *declare-extra-destinations
  script:
    - *build

build-exporter:
  stage: build
  timeout: 5h
  image:
    name: docker.io/docker:stable
    entrypoint: [""]
  variables:
    APP: exporter
  services:
    - docker:dind
  retry: 2
  before_script:
    - *container-build-pre-script
    - *declare-extra-destinations-img
  script:
    - *build-img

build-exposer:
  stage: build
  timeout: 5h
  image:
    name: docker.io/docker:stable
    entrypoint: [""]
  variables:
    APP: exposer
  services:
    - docker:dind
  retry: 2
  before_script:
    - *container-build-pre-script
    - *declare-extra-destinations-img
  script:
    - *build-img

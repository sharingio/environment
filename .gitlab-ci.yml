stages:
  - build
  - post-build

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  PLATFORMS: linux/amd64,linux/arm64
  ARCHES: amd64 arm64
  REGISTRIES: registry.gitlab.com

.container-build-pre-script: &container-build-pre-script |
  set -x
  mkdir -p $HOME/.docker/cli-plugins
  wget -O $HOME/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64
  chmod +x $HOME/.docker/cli-plugins/docker-buildx
  docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  docker buildx create --use --name builder
  docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.declare-extra-destinations-img: &declare-extra-destinations |
  if [[ ! "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]] && [[ -z "$CI_COMMIT_TAG" ]]; then
    export BRANCH_NAME="-$CI_COMMIT_BRANCH"
  fi

  export BASE_TAG=$(date --date="${CI_COMMIT_TIMESTAMP//[T+]/ }" '+%Y.%m.%d.%H%M')
  if [[ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]]; then
    export CONTAINER_EXTRA_DESTINATION="-t $CI_REGISTRY_IMAGE/${APP}:latest$BRANCH_NAME${EXTRA_TAG_NAME}"
  fi
  if [ -n "$CI_COMMIT_TAG" ]; then
    export BRANCH_NAME=""
    export IMAGE_TAG="$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG/${APP}"
    export CONTAINER_EXTRA_DESTINATION="-t $CI_REGISTRY_IMAGE/${APP}:$CI_COMMIT_TAG${EXTRA_TAG_NAME}"
  fi

.build: &build |
  docker buildx build \
    --push \
    -f $CI_PROJECT_DIR/${APP}.Dockerfile \
    $CONTAINER_EXTRA_DESTINATION \
    -t $CI_REGISTRY_IMAGE/${APP}:$BASE_TAG$BRANCH_NAME${EXTRA_TAG_NAME} \
    --platform $PLATFORMS \
    $CI_PROJECT_DIR

# NOTE multi-arch takes too long, something needs to be changed or this will never complete
# it appears to normally take ~30mins for linux/amd64 alone
build-environment-amd64:
  stage: build
  timeout: 5h
  image:
    name: docker.io/docker:stable
    entrypoint: [""]
  variables:
    APP: environment
    PLATFORMS: linux/amd64
    EXTRA_TAG_NAME: -amd64
  services:
    - docker:dind
  retry: 2
  before_script:
    - *container-build-pre-script
    - *declare-extra-destinations
  script:
    - *build

build-environment-arm64:
  stage: build
  timeout: 5h
  image:
    name: docker.io/docker:stable
    entrypoint: [""]
  variables:
    APP: environment
    PLATFORMS: linux/arm64
    EXTRA_TAG_NAME: -arm64
  services:
    - docker:dind
  retry: 2
  before_script:
    - *container-build-pre-script
    - *declare-extra-destinations
  script:
    - *build

build-exporter:
  stage: build
  timeout: 5h
  image:
    name: docker.io/docker:stable
    entrypoint: [""]
  variables:
    APP: exporter
  services:
    - docker:dind
  retry: 2
  before_script:
    - *container-build-pre-script
    - *declare-extra-destinations
  script:
    - *build

build-exposer:
  stage: build
  timeout: 5h
  image:
    name: docker.io/docker:stable
    entrypoint: [""]
  variables:
    APP: exposer
  services:
    - docker:dind
  retry: 2
  before_script:
    - *container-build-pre-script
    - *declare-extra-destinations
  script:
    - *build

tag-container-image-environment:
  stage: post-build
  image: docker.io/docker:stable
  variables:
    APP: environment
  before_script:
    - *container-build-pre-script
    - *declare-extra-destinations
  script:
    - |
      set -x
      cp -rf /kaniko/.docker $HOME/.docker
      if [[ -z "$CI_COMMIT_TAG" ]]; then
      fi
      for tag in $BASE_TAG$BRANCH_NAME${EXTRA_TAG_NAME} latest$BRANCH_NAME${EXTRA_TAG_NAME}; do
        for reg in $REGISTRIES; do
          export IMAGE_TAG_WITH_ARCH=""
          for arch in $ARCHES; do
            IMAGE="$reg/$CI_PROJECT_PATH:$tag-$arch"
            export IMAGE_TAG_WITH_ARCH="$IMAGE_TAG_WITH_ARCH $IMAGE"
          done
          docker manifest create $reg/$CI_PROJECT_PATH/${APP}:$tag $IMAGE_TAG_WITH_ARCH
          for arch in $ARCHES; do
            # TODO tidy up
            EXTRA_ARGS=""
            if [ "$arch" = "arm64" ]; then
              EXTRA_ARGS="--variant v8"
            fi
            docker manifest annotate $reg/$CI_PROJECT_PATH/${APP}:$tag $reg/$CI_PROJECT_PATH/${APP}:$tag-$arch --os linux --arch $arch $EXTRA_ARGS
          done
          docker manifest push $reg/$CI_PROJECT_PATH/${APP}:$tag
        done
      done
